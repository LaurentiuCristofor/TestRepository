<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>How this ebook was edited</title>
  <link href="../styles/stylesheet.css" rel="stylesheet" type="text/css"/>
</head>

<body>
  <h1 id="organization">Basic ebook organization</h1>

  <p>If you've followed the steps from the earlier chapter, you should see a <i>titlepage.xhtml</i> file that references the <i>cover.jpg</i> image that was automatically generated by <i>Calibre</i> for you. There is nothing else that we need to modify in it. However, every book repeats its title information on a page and in this book that is done on the <i>title_copyright.xhtml</i> page. You should now edit the content of this page to match the metadata of your ebook. Then you can also edit the content of <i>version.xhtml</i> accordingly. As you edit these files in the <i>Calibre</i> editor, watch for the preview page on the right, to check that your edits are displayed correctly.</p>

  <p>We need to maintain two tables of contents: one that will be displayed in the book as a list of links and one that will be used to navigate the ebook using an e-reader's Table of Contents feature. The first table is going to be saved in its own XHTML file: <i>toc.xhtml</i> and we will maintain it manually. The second table (the logical table) will be generated by Calibre and will be saved in a <i>toc.ncx</i> file in the Miscellaneous file section of the EPUB. Because this second table can be generated automatically, we can delay generating it until all our content has been updated.</p>
      
  <p>Let's edit the Table of Contents located in <i>toc.xhtml</i>. Currently, this includes several links to the chapters of this book, each of which is residing in its dedicated XHTML file. This book could also have kept all its chapters in a single XHTML file, but keeping each chapter in its own file makes it easier to manage, because we can deal with smaller XHTML files. The <u>New file</u> action of <i>Calibre</i> can be used to add files for new chapters (and to add new images as well, if needed). Once new chapter files are added, the Table of Contents can be updated to include them. Let's take a closer look at the HTML source of our Table of Contents.</p>

  <p>The Table of Contents is organized as an unordered list, as indicated by the <code>&lt;ul&gt;</code> tag. Each chapter gets its entry in this list. For example, the introductory chapter is referenced here as:
  <br/>
  <code>&lt;li&gt;&lt;a href="introduction.xhtml#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;</code>
  <br/>
  Note that this reference specifies both the file name and the id that we had assigned to its top header. To provide an example of how we can reference an element with a different id in the same file, the "Introduction" chapter has a subtopic that is included in another unordered list: this is named "Introduction to HTML" and it links directly to the section that explains HTML tags:
  <br/>
  <code>&lt;li&gt;&lt;a href="introduction.xhtml#HTML"&gt;Introduction to HTML&lt;/a&gt;&lt;/li&gt;</code>
  <br/>
  Note how in this instance, we reference the same XHTML file, but we specify a different identifier in that file (<code>#HTML</code> instead of <code>#Introduction</code>). Following this link from the Table of Contents should allow us to jump as closely as possible to the identified section.</p>
  
  <p>A similar approach can be employed to generate pages that provide different indexes of your content, like the index of images that follows the Table of Contents.</p>

  <p>Of course, no matter how you index your content, internally, the ebook will have an established ordering when navigating it page by page. This ordering is actually defined in the <i>content.opf</i> file that can be found under the <i>Miscellaneous</i> section of this ebook. In this file, you'll find a list of identifiers inside a <code>&lt;spine&gt;</code> listing: that list determines the order in which you will go through the content of your book when navigating from one page to the next. You can edit this list to see how it works. For example, move the <code>&lt;itemref idref="organization"/&gt;</code> line at the end of the list, right before the <code>&lt;/spine&gt;</code> line, close the editor, then scroll through this ebook to see how the organization chapter appears last now, even though it's not the last chapter in the Table of Contents.</p>
  
  <p>To generate the <i>toc.ncx</i> Table of Contents, we can use the <u>Edit Table of Contents</u> action of <i>Calibre</i>. This feature provides several ways of generating a Table of Contents, but the one I used here was <u>Generate ToC from all headings</u>, after which I've just had to remove some unnecessary entries manually. While using this Calibre feature I noticed that it seems to do some additional validation of the syntax of the XHTML files; so we can also use this feature for such validation: just select the <u>Create a new entry</u> action and then select the XHTML file that you want to validate; if that file has any errors, a message will appear at the top of its preview window!</p>
  
  <p>To summarize: create XHTML files for your chapters, specify their order in the <code>&lt;spine&gt;</code> list of the <i>content.opf</i> file, and then reference them from your Table of Contents file; at the end, also create a <i>toc.ncx</i> Table of Contents.</p>

</body>
</html>
